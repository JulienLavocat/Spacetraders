//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var MarketProbes = newMarketProbesTable("public", "market_probes", "")

type marketProbesTable struct {
	postgres.Table

	// Columns
	Ship     postgres.ColumnString
	Waypoint postgres.ColumnString
	System   postgres.ColumnString
	Shipyard postgres.ColumnBool

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type MarketProbesTable struct {
	marketProbesTable

	EXCLUDED marketProbesTable
}

// AS creates new MarketProbesTable with assigned alias
func (a MarketProbesTable) AS(alias string) *MarketProbesTable {
	return newMarketProbesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MarketProbesTable with assigned schema name
func (a MarketProbesTable) FromSchema(schemaName string) *MarketProbesTable {
	return newMarketProbesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MarketProbesTable with assigned table prefix
func (a MarketProbesTable) WithPrefix(prefix string) *MarketProbesTable {
	return newMarketProbesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MarketProbesTable with assigned table suffix
func (a MarketProbesTable) WithSuffix(suffix string) *MarketProbesTable {
	return newMarketProbesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMarketProbesTable(schemaName, tableName, alias string) *MarketProbesTable {
	return &MarketProbesTable{
		marketProbesTable: newMarketProbesTableImpl(schemaName, tableName, alias),
		EXCLUDED:          newMarketProbesTableImpl("", "excluded", ""),
	}
}

func newMarketProbesTableImpl(schemaName, tableName, alias string) marketProbesTable {
	var (
		ShipColumn     = postgres.StringColumn("ship")
		WaypointColumn = postgres.StringColumn("waypoint")
		SystemColumn   = postgres.StringColumn("system")
		ShipyardColumn = postgres.BoolColumn("shipyard")
		allColumns     = postgres.ColumnList{ShipColumn, WaypointColumn, SystemColumn, ShipyardColumn}
		mutableColumns = postgres.ColumnList{SystemColumn, ShipyardColumn}
	)

	return marketProbesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Ship:     ShipColumn,
		Waypoint: WaypointColumn,
		System:   SystemColumn,
		Shipyard: ShipyardColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
