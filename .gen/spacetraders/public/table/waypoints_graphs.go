//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var WaypointsGraphs = newWaypointsGraphsTable("public", "waypoints_graphs", "")

type waypointsGraphsTable struct {
	postgres.Table

	// Columns
	ID       postgres.ColumnInteger
	Source   postgres.ColumnInteger
	Target   postgres.ColumnInteger
	Cost     postgres.ColumnInteger
	SystemID postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type WaypointsGraphsTable struct {
	waypointsGraphsTable

	EXCLUDED waypointsGraphsTable
}

// AS creates new WaypointsGraphsTable with assigned alias
func (a WaypointsGraphsTable) AS(alias string) *WaypointsGraphsTable {
	return newWaypointsGraphsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new WaypointsGraphsTable with assigned schema name
func (a WaypointsGraphsTable) FromSchema(schemaName string) *WaypointsGraphsTable {
	return newWaypointsGraphsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new WaypointsGraphsTable with assigned table prefix
func (a WaypointsGraphsTable) WithPrefix(prefix string) *WaypointsGraphsTable {
	return newWaypointsGraphsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new WaypointsGraphsTable with assigned table suffix
func (a WaypointsGraphsTable) WithSuffix(suffix string) *WaypointsGraphsTable {
	return newWaypointsGraphsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newWaypointsGraphsTable(schemaName, tableName, alias string) *WaypointsGraphsTable {
	return &WaypointsGraphsTable{
		waypointsGraphsTable: newWaypointsGraphsTableImpl(schemaName, tableName, alias),
		EXCLUDED:             newWaypointsGraphsTableImpl("", "excluded", ""),
	}
}

func newWaypointsGraphsTableImpl(schemaName, tableName, alias string) waypointsGraphsTable {
	var (
		IDColumn       = postgres.IntegerColumn("id")
		SourceColumn   = postgres.IntegerColumn("source")
		TargetColumn   = postgres.IntegerColumn("target")
		CostColumn     = postgres.IntegerColumn("cost")
		SystemIDColumn = postgres.StringColumn("system_id")
		allColumns     = postgres.ColumnList{IDColumn, SourceColumn, TargetColumn, CostColumn, SystemIDColumn}
		mutableColumns = postgres.ColumnList{SourceColumn, TargetColumn, CostColumn, SystemIDColumn}
	)

	return waypointsGraphsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:       IDColumn,
		Source:   SourceColumn,
		Target:   TargetColumn,
		Cost:     CostColumn,
		SystemID: SystemIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
